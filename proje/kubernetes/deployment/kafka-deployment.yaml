apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: kafkabroker
  name: kafkabroker
  namespace: default
spec:
  serviceName: kafkabroker
  replicas: 1 # Replikasyon faktörü, broker sayısına göre ayarlanmalıdır. KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR sayisini buna gore ayarlamak lazim.
  selector:
    matchLabels:
      service: kafkabroker
  template:
    metadata:
      labels:
        service: kafkabroker
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafkabroker:9092,PLAINTEXT_HOST://localhost:29092
            - name: KAFKA_BROKER_ID
              value: "1"  # TEK BRKOKER ILE ILERLEYECEGIM ICIN SIMDILIK BU SEKILDE AYARLADIM. Normalde metadata.name'den alınacaktır. bu da string deger ve bunu INT'e convert etmek lazim
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1" # Replikasyon faktörü, broker sayısına göre(replicas sayisina göre) ayarlanmalıdır.
            - name: KAFKA_CLUSTER_ID
              value: SMARTFACE  # Cluster ismi olarak SMARTFACE kullanılıyor. Bu Kafka-UI icinde belirtilmesi lazim!
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_LOG_DIRS
              value: /var/lib/kafka/data  # Verilerin kalıcı olarak depolanacağı dizin.
          image: confluentinc/cp-kafka:7.8.0
          imagePullPolicy: IfNotPresent
          name: kafkabroker
          ports:
            - containerPort: 9092
              protocol: TCP
            - containerPort: 29092
              protocol: TCP
          volumeMounts:
            - name: kafka-data  # Persistent Volume'u bağlamak için volumeMounts ekleniyor.
              mountPath: /var/lib/kafka/data
      restartPolicy: Always
  volumeClaimTemplates:  # Her bir broker için kalıcı depolama alanı oluşturuluyor.
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 512Mi  # Her bir broker için 512Mi depolama alanı ayrılıyor.TEST oldugu icin.